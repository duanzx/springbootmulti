<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>cn.duanzx</groupId>
    <artifactId>springboot-multi</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>springboot-multi-data</module>
        <module>springboot-multi-master</module>
        <module>springboot-multi-slave</module>
    </modules>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <argLine>-Dfile.encoding=UTF-8 -Dmaven.test.skip=true</argLine>
        <java.source.version>1.8</java.source.version>
        <java.target.version>1.8</java.target.version>
        <!-- Library Version -->
        <apache.commons.codec.version>1.12</apache.commons.codec.version>
        <apache.commons.configuration.version>1.10</apache.commons.configuration.version>
        <apache.commons.io.version>2.6</apache.commons.io.version>
        <apache.commons.lang3.version>3.9</apache.commons.lang3.version>
        <apache.httpclient.version>4.5.8</apache.httpclient.version>
        <apache.tomcat.version>8.5.32</apache.tomcat.version>
        <cache-api.version>1.1.0</cache-api.version>
        <cas.client.version>3.4.1</cas.client.version>
        <druid.version>1.1.16</druid.version>
        <ehcache.version>2.10.3</ehcache.version>
        <ehcache3.version>3.6.3</ehcache3.version>
        <gson.version>2.8.5</gson.version>
        <hibernate.jpa.version>1.0.2.Final</hibernate.jpa.version>
        <jackson.verion>2.9.9</jackson.verion>
        <joda-time.version>2.9.6</joda-time.version>
        <jstl.version>1.2</jstl.version>
        <junit.version>4.12</junit.version>
        <maven.compiler.plugin.version>3.6.1</maven.compiler.plugin.version>
        <ojdbc.version>11.2.0.3</ojdbc.version>
        <quartz.version>2.2.3</quartz.version>
        <spring.boot.version>2.1.7.RELEASE</spring.boot.version>
        <spring.data.jpa.version>2.1.8.RELEASE</spring.data.jpa.version>
        <spring.framework.version>5.1.8.RELEASE</spring.framework.version>
        <spring.security.cas.version>4.2.4.RELEASE</spring.security.cas.version>
        <thymeleaf.extras.spring.security4.version>3.0.4.RELEASE</thymeleaf.extras.spring.security4.version>
        <hibernate.validator.version>6.0.8.Final</hibernate.validator.version>
        <tomcat.version>8.5.6</tomcat.version>
    </properties>
    <build>
        <defaultGoal>clean install</defaultGoal>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
   <!-- https://blog.csdn.net/mn960mn/article/details/50894022  使用import scope解决maven单继承问题
   springboot单继承：
       <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.3.3.RELEASE</version>
        </parent>
   springboot一般做法是使用 spring-boot-starter-parent做一个父模块。继承一个父模块，然后再引入相关依赖。
   假如。不想继承，或者想要多个子项目继承项目？怎么做呢？
   Maven的继承和Java的继承一样，无法实现多重继承。
   import scope依赖可以解决。
   可以把dependencyManagement放到单独的专门用来管理依赖的pom中。然后在需要使用依赖的模块中通过 import scope依赖。就可以引入dependencyManagement
   这样，父模块的pom就会非常干净，由专门的packaging为pom来管理依赖。
   具体做法：
   父模块：
   	<groupId>com.test.sample</groupId>
	<artifactId>base-parent1</artifactId>
	<packaging>pom</packaging>
	<version>1.0.0-SNAPSHOT</version>
   <dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>junit</groupId>
				<artifactid>junit</artifactId>
				<version>4.8.2</version>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactid>log4j</artifactId>
				<version>1.2.16</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
   子模块：通过非继承方式引入
<dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>com.test.sample</groupId>
			<artifactid>base-parent1</artifactId>
			<version>1.0.0-SNAPSHOT</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>
	</dependencies>
</dependencyManagement>
<dependency>
	<groupId>junit</groupId>
	<artifactid>junit</artifactId>
</dependency>
<dependency>
	<groupId>log4j</groupId>
	<artifactid>log4j</artifactId>
</dependency>
如果想要使用项目里多个module都使用springboot，那么就不使用单一继承。改为使用 import pom方式。
<dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-dependencies</artifactId>
			<version>1.3.3.RELEASE</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>
	</dependencies>
</dependencyManagement>

<dependencies>
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-web</artifactId>
	</dependency>
</dependencies>
   -->

</project>